// <auto-generated />
using System;
using CafeWebsite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeWebsite.Migrations
{
    [DbContext(typeof(CafeDbContext))]
    [Migration("20250824134012_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("CafeWebsite.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerEmail")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CafeWebsite.Models.OrderItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Toppings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("CafeWebsite.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceS")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Available = true,
                            Category = 0,
                            CreatedAt = new DateTime(2025, 8, 24, 20, 40, 12, 488, DateTimeKind.Local).AddTicks(9763),
                            Description = "Cà phê espresso nguyên chất với hương vị đậm đà, thơm ngon.",
                            Image = "https://images.pexels.com/photos/312418/pexels-photo-312418.jpeg?auto=compress&cs=tinysrgb&w=400",
                            Name = "Espresso Đậm Đà",
                            PriceL = 45000m,
                            PriceM = 35000m,
                            PriceS = 25000m
                        },
                        new
                        {
                            Id = "2",
                            Available = true,
                            Category = 0,
                            CreatedAt = new DateTime(2025, 8, 24, 20, 40, 12, 489, DateTimeKind.Local).AddTicks(8285),
                            Description = "Sự kết hợp hoàn hảo giữa espresso và sữa tạo bọt mịn màng.",
                            Image = "https://images.pexels.com/photos/302899/pexels-photo-302899.jpeg?auto=compress&cs=tinysrgb&w=400",
                            Name = "Cappuccino Creamy",
                            PriceL = 55000m,
                            PriceM = 45000m,
                            PriceS = 35000m
                        },
                        new
                        {
                            Id = "3",
                            Available = true,
                            Category = 1,
                            CreatedAt = new DateTime(2025, 8, 24, 20, 40, 12, 489, DateTimeKind.Local).AddTicks(8309),
                            Description = "Trà sữa truyền thống với trân châu đen mềm mịn.",
                            Image = "https://images.pexels.com/photos/4021971/pexels-photo-4021971.jpeg?auto=compress&cs=tinysrgb&w=400",
                            Name = "Trà Sữa Trân Châu",
                            PriceL = 50000m,
                            PriceM = 40000m,
                            PriceS = 30000m
                        },
                        new
                        {
                            Id = "4",
                            Available = true,
                            Category = 2,
                            CreatedAt = new DateTime(2025, 8, 24, 20, 40, 12, 489, DateTimeKind.Local).AddTicks(8325),
                            Description = "Sinh tố bơ béo ngậy với sữa đặc ngọt ngào.",
                            Image = "https://images.pexels.com/photos/1092730/pexels-photo-1092730.jpeg?auto=compress&cs=tinysrgb&w=400",
                            Name = "Sinh Tố Bơ",
                            PriceL = 55000m,
                            PriceM = 45000m,
                            PriceS = 35000m
                        },
                        new
                        {
                            Id = "5",
                            Available = true,
                            Category = 3,
                            CreatedAt = new DateTime(2025, 8, 24, 20, 40, 12, 489, DateTimeKind.Local).AddTicks(8334),
                            Description = "Nước ép cam tươi 100% từ cam ngọt Việt Nam.",
                            Image = "https://images.pexels.com/photos/162671/orange-juice-vitamins-drink-fresh-162671.jpeg?auto=compress&cs=tinysrgb&w=400",
                            Name = "Nước Ép Cam Tươi",
                            PriceL = 45000m,
                            PriceM = 35000m,
                            PriceS = 25000m
                        });
                });

            modelBuilder.Entity("CafeWebsite.Models.OrderItem", b =>
                {
                    b.HasOne("CafeWebsite.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CafeWebsite.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CafeWebsite.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
